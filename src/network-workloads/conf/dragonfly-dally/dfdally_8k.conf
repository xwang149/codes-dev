LPGROUPS
{
   MODELNET_GRP
   {
      repetitions="1040";
# name of this lp changes according to the model
      nw-lp="8";
# these lp names will be the same for dragonfly-custom model
      modelnet_dragonfly_dally="8";
      modelnet_dragonfly_dally_router="1";
   }
}
PARAMS
{
# packet size in the network
   packet_size="4096";
   modelnet_order=( "dragonfly_dally","dragonfly_dally_router" );
   # scheduler options
   modelnet_scheduler="fcfs";
# chunk size in the network (when chunk size = packet size, packets will not be
# divided into chunks)
   chunk_size="4096";
   # modelnet_scheduler="round-robin";
   num_routers="16";
   num_groups="65";
# buffer size in bytes for local virtual channels
   local_vc_size="16384";
#buffer size in bytes for global virtual channels
   global_vc_size="16384";
#buffer size in bytes for compute node virtual channels
   cn_vc_size="32768";
#bandwidth in GiB/s for local channels
   local_bandwidth="2.0";
# bandwidth in GiB/s for global channels
   global_bandwidth="2.0";
# bandwidth in GiB/s for compute node-router channels
   cn_bandwidth="2.0";
# Number of row channels
   num_row_chans="1";
# Number of column channels
   num_col_chans="1";
# ROSS message size
   message_size="656";
# number of compute nodes connected to router, dictated by dragonfly config
# file
   num_cns_per_router="8";
# number of global channels per router
   num_global_channels="8";
# network config file for intra-group connections
   intra-group-connections="../src/network-workloads/conf/dragonfly-dally/dfdally_8k_intra";
# network config file for inter-group connections
   inter-group-connections="../src/network-workloads/conf/dragonfly-dally/dfdally_8k_inter";
# routing protocol to be used
   routing="prog-adaptive";
   adaptive_threshold="16384";
   route_scoring_metric="delta";
}
